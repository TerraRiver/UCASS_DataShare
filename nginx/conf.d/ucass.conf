# 上游服务器配置
upstream web_frontend {
    server web:30001 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream api_backend {
    server api:30002 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# HTTP 服务器
server {
    listen 80;
    server_name _;  # 替换为你的域名，例如：example.com

    # 安全头
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # 日志
    access_log /var/log/nginx/ucass_access.log;
    error_log /var/log/nginx/ucass_error.log;

    # 健康检查
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # API 请求代理到后端
    location /api/ {
        proxy_pass http://api_backend;

        # 代理头设置
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 缓存和超时设置
        proxy_cache_bypass $http_upgrade;
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;

        # 大文件上传支持
        client_max_body_size 10G;
        proxy_request_buffering off;
    }

    # 上传文件访问
    location /uploads/ {
        alias /var/www/uploads/;

        # 安全设置：禁止执行脚本
        location ~ \.(php|jsp|asp|aspx|cgi)$ {
            deny all;
        }

        # 缓存设置
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # 前端应用代理
    location / {
        proxy_pass http://web_frontend;

        # 代理头设置
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Next.js 特定设置
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
        proxy_buffering off;

        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # 静态资源缓存
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://web_frontend;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Next.js 静态文件
    location /_next/static/ {
        proxy_pass http://web_frontend;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
}

# HTTPS 配置（可选）
# 取消注释以下内容并提供 SSL 证书来启用 HTTPS
#
# server {
#     listen 443 ssl http2;
#     server_name example.com;  # 替换为你的域名
#
#     # SSL 证书配置
#     ssl_certificate /etc/nginx/ssl/fullchain.pem;
#     ssl_certificate_key /etc/nginx/ssl/privkey.pem;
#
#     # SSL 安全配置
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
#     ssl_prefer_server_ciphers on;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#
#     # HSTS
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#
#     # 其他配置与 HTTP 相同
#     # ... (复制上面的 location 配置)
# }
#
# # HTTP 重定向到 HTTPS
# server {
#     listen 80;
#     server_name example.com;  # 替换为你的域名
#     return 301 https://$server_name$request_uri;
# }
